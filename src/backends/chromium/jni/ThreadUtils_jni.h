// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/base/ThreadUtils

#ifndef org_chromium_base_ThreadUtils_JNI
#define org_chromium_base_ThreadUtils_JNI

#include <jni.h>

#include "base/android/jni_android.h"
#include "base/android/jni_generator/jni_generator_helper.h"

#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_base_ThreadUtils[];
const char kClassPath_org_chromium_base_ThreadUtils[] =
    "org/chromium/base/ThreadUtils";

// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_base_ThreadUtils_clazz = 0;
#ifndef org_chromium_base_ThreadUtils_clazz_defined
#define org_chromium_base_ThreadUtils_clazz_defined
inline jclass org_chromium_base_ThreadUtils_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_ThreadUtils,
      &g_org_chromium_base_ThreadUtils_clazz);
}
#endif

// Step 2: method stubs.

static base::subtle::AtomicWord
    g_org_chromium_base_ThreadUtils_setThreadPriorityAudio = 0;
static void Java_ThreadUtils_setThreadPriorityAudio(JNIEnv* env, JniIntWrapper
    tid) {
  CHECK_CLAZZ(env, org_chromium_base_ThreadUtils_clazz(env),
      org_chromium_base_ThreadUtils_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, org_chromium_base_ThreadUtils_clazz(env),
      "setThreadPriorityAudio",
"("
"I"
")"
"V",
      &g_org_chromium_base_ThreadUtils_setThreadPriorityAudio);

     env->CallStaticVoidMethod(org_chromium_base_ThreadUtils_clazz(env),
          method_id, as_jint(tid));
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_base_ThreadUtils_isThreadPriorityAudio = 0;
static jboolean Java_ThreadUtils_isThreadPriorityAudio(JNIEnv* env,
    JniIntWrapper tid) {
  CHECK_CLAZZ(env, org_chromium_base_ThreadUtils_clazz(env),
      org_chromium_base_ThreadUtils_clazz(env), false);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, org_chromium_base_ThreadUtils_clazz(env),
      "isThreadPriorityAudio",
"("
"I"
")"
"Z",
      &g_org_chromium_base_ThreadUtils_isThreadPriorityAudio);

  jboolean ret =
      env->CallStaticBooleanMethod(org_chromium_base_ThreadUtils_clazz(env),
          method_id, as_jint(tid));
  jni_generator::CheckException(env);
  return ret;
}

#endif  // org_chromium_base_ThreadUtils_JNI
